<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kubeiwu.dao.IGroupImageInfo">
	<!-- 600秒刷新一次缓存 -->
	<cache eviction="FIFO" flushInterval="600000" size="512"
		readOnly="true" />

	<!-- 配置数据库字段与JavaBean属性值对应关系 -->
	<resultMap type="com.kubeiwu.bean.GroupImageInfo" id="GroupImageInfoResult">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="TITLE" jdbcType="VARCHAR" property="title" />
		<result column="FROMURL" jdbcType="VARCHAR" property="fromurl" />
		<result column="STATUS" jdbcType="BOOLEAN" property="status" />
		<result column="CATEGORY_CODE" jdbcType="INTEGER" property="category_code" />
		<result column="COVERIMAGE" jdbcType="INTEGER" property="coverimage" />
		<result column="PICCOUNT" jdbcType="INTEGER" property="piccount" />
		<result column="PIXEL" jdbcType="VARCHAR" property="pixel" />
		<result column="TIME" jdbcType="BIGINT" property="time" />
		<collection property="images" resultMap="com.kubeiwu.dao.IImage.ImageResult" />
		<!-- IGirlImage.GirlImage中的id不能和这里的id重复，使用我重新写了一个名字 Gid -->
	</resultMap>
	<!-- parameterType用于传参，如果只有一个参数可写成="String" -->
	<select id="queryGroupImageInfoList" parameterType="com.kubeiwu.bean.RequestListPara"
		resultMap="GroupImageInfoResult">
		select ID,TITLE,FROMURL, CATEGORY_CODE ,COVERIMAGE ,PICCOUNT,PIXEL
		from
		GROUPIMAGEINFO
		<where>
			CATEGORY_CODE=#{category_code} AND STATUS = 1
		</where>
		order by TIME desc limit #{dbIndex},#{pageCount}
	</select>
	<!-- STATUS = 1 没有这个限制 -->
	<select id="adminQueryGroupImageInfoList" parameterType="com.kubeiwu.bean.RequestListPara"
		resultMap="GroupImageInfoResult">
		select ID,TITLE,FROMURL, CATEGORY_CODE ,COVERIMAGE
		,PICCOUNT,PIXEL,STATUS
		from
		GROUPIMAGEINFO
		<where>
			CATEGORY_CODE=#{category_code}
		</where>
		order by TIME asc limit #{dbIndex},#{pageCount}
	</select>
	<select id="queryGroupImageInfoListByWhere" parameterType="String"
		resultMap="GroupImageInfoResult">
		select ID,TITLE,FROMURL, CATEGORY_CODE ,COVERIMAGE
		,PICCOUNT,PIXEL
		from
		GROUPIMAGEINFO where CATEGORY_CODE = #{_parameter}
		AND STATUS = 1
		order by TIME asc
		limit 0,10
	</select>
	<!-- "category_code = " + id + " and status = 0" -->
	<!-- 查询单个的详情 -->
	<select id="queryGroupImageInfoById" parameterType="int"
		resultMap="GroupImageInfoResult">
		select a.ID ,a.TITLE,a.CATEGORY_CODE, b.IMAGEURL
		from
		GROUPIMAGEINFO a left
		join IMAGE b
		on a.ID=b.GROUPIMAGEINFO_ID where
		a.ID =
		#{_parameter}
	</select>
	<select id="queryGroupImageInfoByFromUrl" parameterType="String"
		resultMap="GroupImageInfoResult">
		select ID
		from
		GROUPIMAGEINFO where FROMURL =
		#{_parameter}
	</select>
	<select id="count" parameterType="int" resultType="int">
		select
		count(*)
		from
		GROUPIMAGEINFO
		<where>
			CATEGORY_CODE=#{_parameter} AND STATUS = 1
		</where>

	</select>
	<select id="adminCount" parameterType="int" resultType="int">
		select
		count(*)
		from
		GROUPIMAGEINFO
		<where>
			CATEGORY_CODE=#{_parameter}
		</where>

	</select>
	<!-- 查询单个的详情 -->
	<!-- <select id="queryGroupImageInfoByFromUrl" parameterType="String" resultMap="GroupImageInfoResult"> 
		select ID from GROUPIMAGEINFO where FROMURL = #{_parameter} </select> -->

	<!-- 插入一条 -->
	<!--执行增加操作的SQL语句。id和parameterType 分别与IUserOperation接口中的addUser方法的名字和 参数类型一致。以#{name}的形式引用Student参数 
		的name属性，MyBatis将使用反射读取Student参数 的此属性。#{name}中name大小写敏感。引用其他 的gender等属性与此一致。seGeneratedKeys设置 
		为"true"表明要MyBatis获取由数据库自动生成的主 键；keyProperty="id"指定把获取到的主键值注入 到Student的id属性 -->
	<insert id="insertOne" useGeneratedKeys="true" keyProperty="id"
		statementType="PREPARED" parameterType="com.kubeiwu.bean.GroupImageInfo">
		replace into
		GROUPIMAGEINFO(TITLE,FROMURL,CATEGORY_CODE,COVERIMAGE,PICCOUNT,PIXEL)
		value(#{title},#{fromurl},#{category_code},#{coverimage},#{piccount},#{pixel});
	</insert>
	<update id="updateOne" parameterType="com.kubeiwu.bean.GroupImageInfo">
		update GROUPIMAGEINFO set
		TITLE=#{title},FROMURL=#{fromurl},CATEGORY_CODE=#{category_code}
		,COVERIMAGE=#{coverimage} where
		ID=#{id}
	</update>
	<update id="updatePixel" parameterType="com.kubeiwu.bean.GroupImageInfo">
		update GROUPIMAGEINFO set
		PIXEL=#{pixel} where
		ID=#{id}
	</update>
	<update id="updatePiccount" parameterType="com.kubeiwu.bean.GroupImageInfo">
		update GROUPIMAGEINFO
		set
		PICCOUNT=#{piccount} where
		ID=#{id}
	</update>
	<update id="closeGroupImageById" parameterType="int">
		update
		GROUPIMAGEINFO
		set
		STATUS=0 where
		ID=#{_parameter}
	</update>
	<update id="openGroupImageById" parameterType="int">
		update
		GROUPIMAGEINFO
		set
		STATUS=1 where
		ID=#{_parameter}
	</update>

	<update id="openGroupImageByIds" parameterType="java.util.List">
		update
		GROUPIMAGEINFO
		set
		STATUS=1 where
		ID IN
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	<!-- <update id="openGroupImageByIds" parameterType="array"> update GROUPIMAGEINFO 
		set STATUS=1 where ID IN <foreach collection="array" item="item" index="index" 
		open="(" separator="," close=")"> #{item} </foreach> </update> -->
	<!-- 数据库中STATUS=1的前面10条设置为 STATUS=0 -->
	<update id="open10RecordsByCategoryCode" parameterType="int">
		update
		GROUPIMAGEINFO
		set
		STATUS=1 where
		ID IN ( select a.ID
		from(select ID from
		GROUPIMAGEINFO
		where CATEGORY_CODE=#{_parameter} AND STATUS = 0 order by TIME asc
		limit 0,3) a
		)
	</update>
	<!--关闭全部的 -->
	<update id="closeGroupImagesByCategoryCode" parameterType="int">
		update GROUPIMAGEINFO
		set
		STATUS=0 where
		CATEGORY_CODE=#{_parameter}
	</update>
	<!-- 打开全部的CATEGORY_CODE -->
	<update id="openGroupImagesByCategoryCode" parameterType="int">
		update
		GROUPIMAGEINFO
		set
		STATUS=1 where
		CATEGORY_CODE=#{_parameter}
	</update>

</mapper>
